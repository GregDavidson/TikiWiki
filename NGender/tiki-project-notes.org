#+TITLE: tiki-project-notes
#+DATE: \today
#+AUTHOR: J. Greg Davidson
#+EMAIL: greg.davidson@gmail.com
#+OPTIONS: ^:{}
#+latex_header: \usepackage[margin=0.5in]{geometry}

* Tiki Project Notes

** Status

*** Issues
**** Need to make User::<USER>::<EVERYTHING> Private

Categories for user private projects living under their category
should be private.  The Categories which we want to make available
to Stewards should be:
- Anything under Project::
- User::*
- Anything else?
- Do we still need the two tables?

**** Bug!
[https://ngender.org/tiki-index.php?page=Design+Space]
- won't let me create the new pages!

**** Emacs MySQL Helper Help
Create emacs commands for
- quoting & unquoting text
- turning a CALL assert ... into a suitable SELECT
- see ~/.emacs.d/jgd/jgd-sql-quotes.el

*** Questions

How is tiki_p_edit set when a page is initially created,
i.e. when there's data from submitting a form and the page
does not exist yet?

How exactly is tiki_p_edit set when a page already exists?

What permissions and code determines whether a category will be shown for a new or existing page?

What permissions and code determines whether a category will
be editable (added/removed to/from) with a new or existing page?

Which pages (and other things) have neither
- an NGender Steward Category
- a *Editable Category

How can I conveniently see the permissions ON a category?

**** How do object types work with users_objectpermissions?

Which ids are used for the various types of objects to
construct the objectId in users_objectpermissions?

ObjectId = md5sum(concat( TYPE, ID )) but for this analysis,
let's pretend that it's a (TYPE, ID) pair.

| objectType | objectId.type | objectId.id | corresponding table | field in corresponding table |
|------------+---------------+-------------+---------------------+------------------------------|
| category   |               |             |                     |                              |
| calendar   |               |             |                     |                              |
| wiki page  |               |             |                     |                              |

Questions:
- Are objectType and objectId.type the same thing?
- What fieldname of what table corresponds to objectId.id
- for each possible value of objectId.type?
	-- Document in table above, please!

What is the full list of possible objectType names?

**** How do fields of table tiki_objects correspond to type-specific tables?

We have similar questions about table tiki_objects but w/o md5 confusion:

Correspondences between tiki_objects and the "master" table for each type:

+------------+----------+----------+----------+---------------------+
| type       | objectId | ItemId   | name     | corresponding table |
+------------+----------+----------+----------+---------------------+
| blog       |          | blobId   | title    | tiki_blogs          |
+------------+----------+----------+----------+---------------------+
| blog post  |          | postId   | title    | tiki_blog_posts     |
+------------+----------+----------+----------+---------------------+
| calendar   |          | id       |          |                     |
+------------+----------+----------+----------+---------------------+
| forum      |          | forumId  | name?    | tiki_forums         |
+------------+----------+----------+----------+---------------------+
| forum post |          | id       |          | ??                  |
+------------+----------+----------+----------+---------------------+
| wiki page  |          | pageName | pageName | wiki_pages          |
+------------+----------+----------+----------+---------------------+
objectId is a serial int so unique to this table.  ItemId
and name are both text.
Questions:
- How does ItemId differ from name?
	-- when type = 'wiki page' they are identical
	-- otherwise ItemId is an integer index
- What other type values are possible?
- Which table values correspond to the type values?
- Which fieldname corresponds to ItemId? To name?
- Please fill in in above table!

#+BEGIN_SRC sql
SELECT DISTINCT type FROM tiki_objects WHERE itemId REGEXP '^[[:digit:]]+$';
SELECT DISTINCT type FROM tiki_objects WHERE itemId <> `name`;
#+END_SRC
| type       |
|------------|
| blog       |
| blog post  |
| calendar   |
| forum      |
| forum post |

#+BEGIN_SRC sql
select distinct type from tiki_objects where NOT ( itemId REGEXP '^[[:digit:]]+$');
select distinct type from tiki_objects where itemId = `name`;
#+END_SRC
| type      |
|-----------|
| wiki page |

#+BEGIN_SRC sql
select itemId from tiki_objects where `type` = 'wiki page' limit 2;
#+END_SRC
| itemId            |
|-------------------|
| SandBox           |
| Abundance Culture |

#+BEGIN_SRC sql
select objectId from tiki_objects
where `type` = 'wiki pages'
and objectId not in (select pageName from tiki_pages);
#+END_SRC
--> empty set!

Note the off-by-1 errors: -- add some details of the odd-man-out!!

#+BEGIN_SRC sql
select count(*) from tiki_objects where `type` = 'blog post'; -- 11
select count(*) from tiki_blog_posts; -- 12

select count(*) from tiki_objects where `type` = 'blog'; -- 13
select count(*) from tiki_blogs; -- 14

select count(*) from tiki_objects where `type` = 'forum'; -- 9
select count(*) from tiki_forums; -- 10

select count(*) from tiki_objects where `type` = 'calendar'; -- 1
select count(*) from tiki_calendars; -- 2
#+END_SRC
- There doesn't seem to be a tiki table for Forum Posts!
- There doesn't seem to be a tiki table for Forum Topics!

#+BEGIN_EXAMPLE
$ grep 'CREATE TABLE.*forum' db/tiki.sql 
CREATE TABLE `tiki_forum_attachments` (
CREATE TABLE `tiki_forum_reads` (
CREATE TABLE `tiki_forums` (
CREATE TABLE `tiki_forums_queue` (
CREATE TABLE `tiki_forums_reported` (
#+END_EXAMPLE

#+BEGIN_SRC sql
select table_name from information_schema.tables
where table_schema = 'tiki' and table_name like '%forum%';
#+END_SRC
| table_name             |
|------------------------|
| tiki_forum_attachments |
| tiki_forum_reads       |
| tiki_forums            |
| tiki_forums_queue      |
| tiki_forums_reported   |

What is TABLE `tiki_user_postings`?

*** Infelicities
**** DONE Wiki Page Category Paths not necessarily links
		 CLOSED: [2018-04-18 Wed 16:05]

Some categories show up associated with a Web Page as text
rather than a link.  This is because the user lacks
permission to be shown a list of all of the Web Pages of
that category.  The infelicity is that some of the other
information about the category might be appropriate to be
shown, e.g. the description of the category.

**** Kludges:

**** categlib patch for Stewards

Really should be fixed in Perms.php Perms::get()

** Little Tasks
*** Little emacs niceties
- sql literal (un)quoting
*** Keith's Environment (save the planet!)
- Set up phpmyadmin for Keith

*** Home vs. HomePage
Keith tried renaming HomePage to Home
to be consistent with the Menu.  Alas,
when I created a new user account and
went to it to test it, it tried to go
to HomePage and there was an error!

I've named it back _and_ I'd like to
have it be Home and not cause trouble!

I'm also noticing with the new page for my mother that in
place of the Edit pageSource ... More^ line after the page
title she only has the More^ menu button under which is the
one action Bookmark.  It's odd and lonely looking!

*** Generate "Can Do" table
Auto-generate table in
https://ngender.org/tiki-index.php?page=Tiki+Participation
from the information in the database.

Maybe also have some "inherited groups" autogenerated which
can be used to control content!
** Categorical Stewardship Project

Purpose: Leverage Default Groups with their Default
Categories to give users control over objects they create
and/or objects associated with their default category.

The full set of ngender_stewards features are invoked when
(1) feature_ngender_stewards == 'y'
(2) the user is a member of group Stewards
(3) the user has a default group and category

Stewards are allowed to create new objects - currently only wiki pages!!
New objects will be associated with the user's default category.

The SQL procedure make_stewards_be_stewards() will ensure
that
1. All Stewards have a default group named User_USERNAME.
2. All Steward's default gruops have a default category named User::USERNAME.
3. The permissions between a Steward's default group and
their default category are
- copied from group Stewards <-> category User::Test::Steward
- which should allow all or nearly all permissions

Additional questions:
- Should we create Group Steward if it doesn't exist? YES
- Should we have a settable format for Default Group Names? NO for now
- Should we have a settable format and/or parent for Default Categories? User:: or User::Test::
- Should different users have a different parent for their Default Categories? NO for now
- Should it be OK for a Steward to delete their Default
  Category from an object which they created? YES

For maximum simplicity, when feature_categorical_stewardship == 'y'
- Ensure Group Steward exists
- Ensure Category User exists
- When a regular user is created with Group Steward
	- Create their Default Group as User_TheirUserName
	- Create their Default Category as User::TheirUserName
	- Ensure their Default Category has suitable permissions
		- Avoid permission of being able to add other objects to it!!
		- Never allow that permission for a Default Category?
- Test account names begin with Z[:uppercase_alpha:]
	- Test account default categories are User::Test::TheirUserName
- Permissions can be copied from a model
	- Model permissions are those between a model group and a model category
	- Model categories are User::Test::<NAME>

These conventions could be made more obvious??
- Category parents could be
	- Steward::
	- Model::
- Groups could be more obvious
	-  prefix could be Steward_ or Model_
	- Steward_* groups could inherit from Stewards
	- Model_* groups could inherit from Models


*** [DONE] First Project: Setup Users with Default Groups with Default Categories

Did it with sql!

Extra credit: Create it as an admin check box.

*** Second Project: Fix Tiki Categories so that
1) [DONE] Any object created newly by a user is associated with that users' Default Category, if any.
2) A user can do anything they like with an object associated with their Default Category, including
	1) [DONE] In editing, See all possible categories (--> but consider having a list of "hidden" categories)
	2) [TODO] Edit the categories associated with their object

*** owner vs. creator vs. user

#+BEGIN_SRC sql
TABLE tiki_user_tasks
	user varchar(200) NOT NULL DEFAULT '',             -- task user
	creator varchar(200) NOT NULL,                     -- username of creator
#+END_SRC

*** SELECT LIKE owner

#+BEGIN_SRC sql
SELECT table_name,column_name,DATA_TYPE FROM `COLUMNS`
WHERE TABLE_SCHEMA='tiki' and COLUMN_NAME = 'owner'
#+END_SRC

#+BEGIN_SRC sql
SELECT table_name,column_name,DATA_TYPE FROM `COLUMNS`
WHERE TABLE_SCHEMA='tiki' and COLUMN_NAME like '%owner%'
#+END_SRC

+------------+--------------+-----------+
| table_name | column_name  | DATA_TYPE |
+------------+--------------+-----------+
| tiki_blogs | always_owner | char      |
+------------+--------------+-----------+

*** SELECT LIKE creator

#+BEGIN_SRC sql
SELECT table_name,column_name,DATA_TYPE FROM `COLUMNS`
WHERE TABLE_SCHEMA='tiki' and COLUMN_NAME = 'creator'
#+END_SRC

+-----------------+-------------+-----------+
| table_name      | column_name | DATA_TYPE |
+-----------------+-------------+-----------+
| tiki_pages      | creator     | varchar   |
+-----------------+-------------+-----------+
| tiki_user_tasks | creator     | varchar   |
+-----------------+-------------+-----------+

#+BEGIN_SRC sql
SELECT table_name,column_name,DATA_TYPE FROM `COLUMNS`
WHERE TABLE_SCHEMA='tiki' and COLUMN_NAME like '%creator%'
#+END_SRC

+-------------------------+-------------------+-----------+
| table_name              | column_name       | DATA_TYPE |
+-------------------------+-------------------+-----------+
| tiki_article_types      | creator_edit      | varchar   |
+-------------------------+-------------------+-----------+
| tiki_file_galleries     | show_creator      | char      |
+-------------------------+-------------------+-----------+
| tiki_pages              | creator           | varchar   |
+-------------------------+-------------------+-----------+
| tiki_user_tasks         | creator           | varchar   |
+-------------------------+-------------------+-----------+
| tiki_user_tasks         | rights_by_creator | char      |
+-------------------------+-------------------+-----------+
| tiki_user_tasks_history | accepted_creator  | char      |
+-------------------------+-------------------+-----------+

*** SELECT LIKE user

#+BEGIN_SRC sql
SELECT table_name,column_name,DATA_TYPE FROM `COLUMNS`
WHERE TABLE_SCHEMA='tiki' and COLUMN_NAME = 'userid'
#+END_SRC

+-------------------------+-------------+-----------+
| table_name              | column_name | DATA_TYPE |
+-------------------------+-------------+-----------+
| tiki_credits            | userId      | int       |
+-------------------------+-------------+-----------+
| tiki_credits_usage      | userId      | int       |
+-------------------------+-------------+-----------+
| tiki_download           | userId      | int       |
+-------------------------+-------------+-----------+
| tiki_language           | userId      | int       |
+-------------------------+-------------+-----------+
| tiki_payment_received   | userId      | int       |
+-------------------------+-------------+-----------+
| tiki_payment_requests   | userId      | int       |
+-------------------------+-------------+-----------+
| tiki_search_queries     | userId      | int       |
+-------------------------+-------------+-----------+
| tiki_user_login_cookies | userId      | int       |
+-------------------------+-------------+-----------+
| tiki_user_monitors      | userId      | int       |
+-------------------------+-------------+-----------+
| users_usergroups        | userId      | int       |
+-------------------------+-------------+-----------+
| users_users             | userId      | int       |
+-------------------------+-------------+-----------+

#+BEGIN_SRC sql
SELECT table_name,column_name,DATA_TYPE FROM `COLUMNS`
WHERE TABLE_SCHEMA='tiki' and COLUMN_NAME LIKE '%user%id%'
#+END_SRC

+----------------------------+----------------------------+-----------+
| table_name                 | column_name                | DATA_TYPE |
+----------------------------+----------------------------+-----------+
| index_582a38baa4237        | tracker_field_user_skypeid | text      |
+----------------------------+----------------------------+-----------+
| tiki_acct_account          | accountUserId              | int       |
+----------------------------+----------------------------+-----------+
| tiki_credits               | userId                     | int       |
+----------------------------+----------------------------+-----------+
| tiki_credits_usage         | userId                     | int       |
+----------------------------+----------------------------+-----------+
| tiki_download              | userId                     | int       |
+----------------------------+----------------------------+-----------+
| tiki_language              | userId                     | int       |
+----------------------------+----------------------------+-----------+
| tiki_live_support_requests | user_id                    | varchar   |
+----------------------------+----------------------------+-----------+
| tiki_payment_received      | userId                     | int       |
+----------------------------+----------------------------+-----------+
| tiki_payment_requests      | userId                     | int       |
+----------------------------+----------------------------+-----------+
| tiki_search_queries        | userId                     | int       |
+----------------------------+----------------------------+-----------+
| tiki_user_answers          | userResultId               | int       |
+----------------------------+----------------------------+-----------+
| tiki_user_answers_uploads  | userResultId               | int       |
+----------------------------+----------------------------+-----------+
| tiki_user_login_cookies    | userId                     | int       |
+----------------------------+----------------------------+-----------+
| tiki_user_monitors         | userId                     | int       |
+----------------------------+----------------------------+-----------+
| tiki_user_quizzes          | userResultId               | int       |
+----------------------------+----------------------------+-----------+
| users_groups               | usersTrackerId             | int       |
+----------------------------+----------------------------+-----------+
| users_groups               | usersFieldId               | int       |
+----------------------------+----------------------------+-----------+
| users_groups               | registrationUsersFieldIds  | text      |
+----------------------------+----------------------------+-----------+
| users_usergroups           | userId                     | int       |
+----------------------------+----------------------------+-----------+
| users_users                | userId                     | int       |
+----------------------------+----------------------------+-----------+

#+BEGIN_SRC sql
SELECT table_name,column_name,DATA_TYPE FROM `COLUMNS`
WHERE TABLE_SCHEMA='tiki' and COLUMN_NAME = 'user'
#+END_SRC

+-------------------------------+-------------+-----------+
| table_name                    | column_name | DATA_TYPE |
+-------------------------------+-------------+-----------+
| messu_archive                 | user        | varchar   |
+-------------------------------+-------------+-----------+
| messu_messages                | user        | varchar   |
+-------------------------------+-------------+-----------+
| messu_sent                    | user        | varchar   |
+-------------------------------+-------------+-----------+
| tiki_actionlog                | user        | varchar   |
+-------------------------------+-------------+-----------+
| tiki_banning                  | user        | varchar   |
+-------------------------------+-------------+-----------+
| tiki_blogs                    | user        | varchar   |
+-------------------------------+-------------+-----------+
| tiki_blog_posts               | user        | varchar   |
+-------------------------------+-------------+-----------+
| tiki_calendars                | user        | varchar   |
+-------------------------------+-------------+-----------+
| tiki_calendar_items           | user        | varchar   |
+-------------------------------+-------------+-----------+
| tiki_calendar_recurrence      | user        | varchar   |
+-------------------------------+-------------+-----------+
| tiki_files                    | user        | varchar   |
+-------------------------------+-------------+-----------+
| tiki_file_drafts              | user        | varchar   |
+-------------------------------+-------------+-----------+
| tiki_file_galleries           | user        | varchar   |
+-------------------------------+-------------+-----------+
| tiki_forums_queue             | user        | varchar   |
+-------------------------------+-------------+-----------+
| tiki_forums_reported          | user        | varchar   |
+-------------------------------+-------------+-----------+
| tiki_forum_reads              | user        | varchar   |
+-------------------------------+-------------+-----------+
| tiki_freetagged_objects       | user        | varchar   |
+-------------------------------+-------------+-----------+
| tiki_galleries                | user        | varchar   |
+-------------------------------+-------------+-----------+
| tiki_goal_events              | user        | varchar   |
+-------------------------------+-------------+-----------+
| tiki_history                  | user        | varchar   |
+-------------------------------+-------------+-----------+
| tiki_images                   | user        | varchar   |
+-------------------------------+-------------+-----------+
| tiki_live_support_messages    | user        | varchar   |
+-------------------------------+-------------+-----------+
| tiki_live_support_operators   | user        | varchar   |
+-------------------------------+-------------+-----------+
| tiki_live_support_requests    | user        | varchar   |
+-------------------------------+-------------+-----------+
| tiki_mailin_accounts          | user        | varchar   |
+-------------------------------+-------------+-----------+
| tiki_minical_events           | user        | varchar   |
+-------------------------------+-------------+-----------+
| tiki_minical_topics           | user        | varchar   |
+-------------------------------+-------------+-----------+
| tiki_minichat                 | user        | varchar   |
+-------------------------------+-------------+-----------+
| tiki_pages                    | user        | varchar   |
+-------------------------------+-------------+-----------+
| tiki_page_footnotes           | user        | varchar   |
+-------------------------------+-------------+-----------+
| tiki_semaphores               | user        | varchar   |
+-------------------------------+-------------+-----------+
| tiki_sessions                 | user        | varchar   |
+-------------------------------+-------------+-----------+
| tiki_sheet_values             | user        | varchar   |
+-------------------------------+-------------+-----------+
| tiki_shoutbox                 | user        | varchar   |
+-------------------------------+-------------+-----------+
| tiki_suggested_faq_questions  | user        | varchar   |
+-------------------------------+-------------+-----------+
| tiki_tags                     | user        | varchar   |
+-------------------------------+-------------+-----------+
| tiki_tracker_item_attachments | user        | varchar   |
+-------------------------------+-------------+-----------+
| tiki_url_shortener            | user        | varchar   |
+-------------------------------+-------------+-----------+
| tiki_userfiles                | user        | varchar   |
+-------------------------------+-------------+-----------+
| tiki_userpoints               | user        | varchar   |
+-------------------------------+-------------+-----------+
| tiki_user_assigned_modules    | user        | varchar   |
+-------------------------------+-------------+-----------+
| tiki_user_bookmarks_folders   | user        | varchar   |
+-------------------------------+-------------+-----------+
| tiki_user_bookmarks_urls      | user        | varchar   |
+-------------------------------+-------------+-----------+
| tiki_user_mail_accounts       | user        | varchar   |
+-------------------------------+-------------+-----------+
| tiki_user_menus               | user        | varchar   |
+-------------------------------+-------------+-----------+
| tiki_user_notes               | user        | varchar   |
+-------------------------------+-------------+-----------+
| tiki_user_postings            | user        | varchar   |
+-------------------------------+-------------+-----------+
| tiki_user_preferences         | user        | varchar   |
+-------------------------------+-------------+-----------+
| tiki_user_quizzes             | user        | varchar   |
+-------------------------------+-------------+-----------+
| tiki_user_reports             | user        | varchar   |
+-------------------------------+-------------+-----------+
| tiki_user_reports_cache       | user        | varchar   |
+-------------------------------+-------------+-----------+
| tiki_user_taken_quizzes       | user        | varchar   |
+-------------------------------+-------------+-----------+
| tiki_user_tasks               | user        | varchar   |
+-------------------------------+-------------+-----------+
| tiki_user_votings             | user        | varchar   |
+-------------------------------+-------------+-----------+
| tiki_user_watches             | user        | varchar   |
+-------------------------------+-------------+-----------+
| tiki_webmail_contacts         | user        | varchar   |
+-------------------------------+-------------+-----------+
| tiki_webmail_contacts_fields  | user        | varchar   |
+-------------------------------+-------------+-----------+
| tiki_webmail_messages         | user        | varchar   |
+-------------------------------+-------------+-----------+
| tiki_wiki_attachments         | user        | varchar   |
+-------------------------------+-------------+-----------+

#+BEGIN_SRC sql
SELECT table_name,column_name, DATA_TYPE
FROM `COLUMNS`
WHERE TABLE_SCHEMA='tiki'
AND COLUMN_NAME LIKE '%user%'
AND table_name NOT LIKE 'index%'
ORDER BY table_name, column_name
#+END_SRC

+-------------------------------+---------------------------+-----------+
| table_name                    | column_name               | DATA_TYPE |
+-------------------------------+---------------------------+-----------+
| messu_archive                 | user                      | varchar   |
+-------------------------------+---------------------------+-----------+
| messu_archive                 | user_bcc                  | text      |
+-------------------------------+---------------------------+-----------+
| messu_archive                 | user_cc                   | text      |
+-------------------------------+---------------------------+-----------+
| messu_archive                 | user_from                 | varchar   |
+-------------------------------+---------------------------+-----------+
| messu_archive                 | user_to                   | text      |
+-------------------------------+---------------------------+-----------+
| messu_messages                | user                      | varchar   |
+-------------------------------+---------------------------+-----------+
| messu_messages                | user_bcc                  | text      |
+-------------------------------+---------------------------+-----------+
| messu_messages                | user_cc                   | text      |
+-------------------------------+---------------------------+-----------+
| messu_messages                | user_from                 | varchar   |
+-------------------------------+---------------------------+-----------+
| messu_messages                | user_to                   | text      |
+-------------------------------+---------------------------+-----------+
| messu_sent                    | user                      | varchar   |
+-------------------------------+---------------------------+-----------+
| messu_sent                    | user_bcc                  | text      |
+-------------------------------+---------------------------+-----------+
| messu_sent                    | user_cc                   | text      |
+-------------------------------+---------------------------+-----------+
| messu_sent                    | user_from                 | varchar   |
+-------------------------------+---------------------------+-----------+
| messu_sent                    | user_to                   | text      |
+-------------------------------+---------------------------+-----------+
| tiki_acct_account             | accountUserId             | int       |
+-------------------------------+---------------------------+-----------+
| tiki_actionlog                | user                      | varchar   |
+-------------------------------+---------------------------+-----------+
| tiki_auth_tokens              | createUser                | char      |
+-------------------------------+---------------------------+-----------+
| tiki_auth_tokens              | userPrefix                | varchar   |
+-------------------------------+---------------------------+-----------+
| tiki_banners                  | maxUserImpressions        | int       |
+-------------------------------+---------------------------+-----------+
| tiki_banning                  | user                      | varchar   |
+-------------------------------+---------------------------+-----------+
| tiki_blogs                    | user                      | varchar   |
+-------------------------------+---------------------------+-----------+
| tiki_blog_posts               | user                      | varchar   |
+-------------------------------+---------------------------+-----------+
| tiki_calendars                | user                      | varchar   |
+-------------------------------+---------------------------+-----------+
| tiki_calendar_items           | user                      | varchar   |
+-------------------------------+---------------------------+-----------+
| tiki_calendar_recurrence      | user                      | varchar   |
+-------------------------------+---------------------------+-----------+
| tiki_calendar_roles           | username                  | varchar   |
+-------------------------------+---------------------------+-----------+
| tiki_chat_channels            | max_users                 | int       |
+-------------------------------+---------------------------+-----------+
| tiki_comments                 | userName                  | varchar   |
+-------------------------------+---------------------------+-----------+
| tiki_comments                 | user_ip                   | varchar   |
+-------------------------------+---------------------------+-----------+
| tiki_copyrights               | userName                  | varchar   |
+-------------------------------+---------------------------+-----------+
| tiki_credits                  | userId                    | int       |
+-------------------------------+---------------------------+-----------+
| tiki_credits_usage            | userId                    | int       |
+-------------------------------+---------------------------+-----------+
| tiki_download                 | userId                    | int       |
+-------------------------------+---------------------------+-----------+
| tiki_files                    | lastModifUser             | varchar   |
+-------------------------------+---------------------------+-----------+
| tiki_files                    | user                      | varchar   |
+-------------------------------+---------------------------+-----------+
| tiki_file_drafts              | user                      | varchar   |
+-------------------------------+---------------------------+-----------+
| tiki_file_galleries           | show_last_user            | char      |
+-------------------------------+---------------------------+-----------+
| tiki_file_galleries           | user                      | varchar   |
+-------------------------------+---------------------------+-----------+
| tiki_forums                   | inbound_pop_user          | varchar   |
+-------------------------------+---------------------------+-----------+
| tiki_forums_queue             | user                      | varchar   |
+-------------------------------+---------------------------+-----------+
| tiki_forums_reported          | user                      | varchar   |
+-------------------------------+---------------------------+-----------+
| tiki_forum_reads              | user                      | varchar   |
+-------------------------------+---------------------------+-----------+
| tiki_freetagged_objects       | user                      | varchar   |
+-------------------------------+---------------------------+-----------+
| tiki_galleries                | showuser                  | char      |
+-------------------------------+---------------------------+-----------+
| tiki_galleries                | user                      | varchar   |
+-------------------------------+---------------------------+-----------+
| tiki_goal_events              | user                      | varchar   |
+-------------------------------+---------------------------+-----------+
| tiki_groupalert               | displayEachuser           | char      |
+-------------------------------+---------------------------+-----------+
| tiki_history                  | user                      | varchar   |
+-------------------------------+---------------------------+-----------+
| tiki_images                   | user                      | varchar   |
+-------------------------------+---------------------------+-----------+
| tiki_invited                  | used_on_user              | varchar   |
+-------------------------------+---------------------------+-----------+
| tiki_language                 | userId                    | int       |
+-------------------------------+---------------------------+-----------+
| tiki_live_support_messages    | user                      | varchar   |
+-------------------------------+---------------------------+-----------+
| tiki_live_support_messages    | username                  | varchar   |
+-------------------------------+---------------------------+-----------+
| tiki_live_support_operators   | user                      | varchar   |
+-------------------------------+---------------------------+-----------+
| tiki_live_support_requests    | tiki_user                 | varchar   |
+-------------------------------+---------------------------+-----------+
| tiki_live_support_requests    | user                      | varchar   |
+-------------------------------+---------------------------+-----------+
| tiki_live_support_requests    | user_id                   | varchar   |
+-------------------------------+---------------------------+-----------+
| tiki_logs                     | loguser                   | varchar   |
+-------------------------------+---------------------------+-----------+
| tiki_mailin_accounts          | user                      | varchar   |
+-------------------------------+---------------------------+-----------+
| tiki_mailin_accounts          | username                  | varchar   |
+-------------------------------+---------------------------+-----------+
| tiki_menu_options             | userlevel                 | int       |
+-------------------------------+---------------------------+-----------+
| tiki_minical_events           | user                      | varchar   |
+-------------------------------+---------------------------+-----------+
| tiki_minical_topics           | user                      | varchar   |
+-------------------------------+---------------------------+-----------+
| tiki_minichat                 | user                      | varchar   |
+-------------------------------+---------------------------+-----------+
| tiki_newsletters              | allowUserSub              | char      |
+-------------------------------+---------------------------+-----------+
| tiki_newsletters              | users                     | int       |
+-------------------------------+---------------------------+-----------+
| tiki_newsletter_subscriptions | isUser                    | char      |
+-------------------------------+---------------------------+-----------+
| tiki_object_scores            | triggerUser               | varchar   |
+-------------------------------+---------------------------+-----------+
| tiki_pages                    | user                      | varchar   |
+-------------------------------+---------------------------+-----------+
| tiki_page_footnotes           | user                      | varchar   |
+-------------------------------+---------------------------+-----------+
| tiki_payment_received         | userId                    | int       |
+-------------------------------+---------------------------+-----------+
| tiki_payment_requests         | userId                    | int       |
+-------------------------------+---------------------------+-----------+
| tiki_received_articles        | receivedFromUser          | varchar   |
+-------------------------------+---------------------------+-----------+
| tiki_received_pages           | receivedFromUser          | varchar   |
+-------------------------------+---------------------------+-----------+
| tiki_search_queries           | userId                    | int       |
+-------------------------------+---------------------------+-----------+
| tiki_semaphores               | user                      | varchar   |
+-------------------------------+---------------------------+-----------+
| tiki_sent_newsletters         | users                     | int       |
+-------------------------------+---------------------------+-----------+
| tiki_sessions                 | user                      | varchar   |
+-------------------------------+---------------------------+-----------+
| tiki_sheet_values             | user                      | varchar   |
+-------------------------------+---------------------------+-----------+
| tiki_shoutbox                 | user                      | varchar   |
+-------------------------------+---------------------------+-----------+
| tiki_suggested_faq_questions  | user                      | varchar   |
+-------------------------------+---------------------------+-----------+
| tiki_tags                     | user                      | varchar   |
+-------------------------------+---------------------------+-----------+
| tiki_tracker_item_attachments | user                      | varchar   |
+-------------------------------+---------------------------+-----------+
| tiki_url_shortener            | user                      | varchar   |
+-------------------------------+---------------------------+-----------+
| tiki_userfiles                | user                      | varchar   |
+-------------------------------+---------------------------+-----------+
| tiki_userpoints               | user                      | varchar   |
+-------------------------------+---------------------------+-----------+
| tiki_user_answers             | userResultId              | int       |
+-------------------------------+---------------------------+-----------+
| tiki_user_answers_uploads     | userResultId              | int       |
+-------------------------------+---------------------------+-----------+
| tiki_user_assigned_modules    | user                      | varchar   |
+-------------------------------+---------------------------+-----------+
| tiki_user_bookmarks_folders   | user                      | varchar   |
+-------------------------------+---------------------------+-----------+
| tiki_user_bookmarks_urls      | user                      | varchar   |
+-------------------------------+---------------------------+-----------+
| tiki_user_login_cookies       | userId                    | int       |
+-------------------------------+---------------------------+-----------+
| tiki_user_mailin_struct       | username                  | varchar   |
+-------------------------------+---------------------------+-----------+
| tiki_user_mail_accounts       | user                      | varchar   |
+-------------------------------+---------------------------+-----------+
| tiki_user_mail_accounts       | username                  | varchar   |
+-------------------------------+---------------------------+-----------+
| tiki_user_menus               | user                      | varchar   |
+-------------------------------+---------------------------+-----------+
| tiki_user_monitors            | userId                    | int       |
+-------------------------------+---------------------------+-----------+
| tiki_user_notes               | user                      | varchar   |
+-------------------------------+---------------------------+-----------+
| tiki_user_postings            | user                      | varchar   |
+-------------------------------+---------------------------+-----------+
| tiki_user_preferences         | user                      | varchar   |
+-------------------------------+---------------------------+-----------+
| tiki_user_quizzes             | user                      | varchar   |
+-------------------------------+---------------------------+-----------+
| tiki_user_quizzes             | userResultId              | int       |
+-------------------------------+---------------------------+-----------+
| tiki_user_reports             | user                      | varchar   |
+-------------------------------+---------------------------+-----------+
| tiki_user_reports_cache       | user                      | varchar   |
+-------------------------------+---------------------------+-----------+
| tiki_user_taken_quizzes       | user                      | varchar   |
+-------------------------------+---------------------------+-----------+
| tiki_user_tasks               | user                      | varchar   |
+-------------------------------+---------------------------+-----------+
| tiki_user_tasks_history       | accepted_user             | char      |
+-------------------------------+---------------------------+-----------+
| tiki_user_votings             | user                      | varchar   |
+-------------------------------+---------------------------+-----------+
| tiki_user_watches             | user                      | varchar   |
+-------------------------------+---------------------------+-----------+
| tiki_webmail_contacts         | user                      | varchar   |
+-------------------------------+---------------------------+-----------+
| tiki_webmail_contacts_fields  | user                      | varchar   |
+-------------------------------+---------------------------+-----------+
| tiki_webmail_messages         | user                      | varchar   |
+-------------------------------+---------------------------+-----------+
| tiki_wiki_attachments         | user                      | varchar   |
+-------------------------------+---------------------------+-----------+
| users_groups                  | registrationUsersFieldIds | text      |
+-------------------------------+---------------------------+-----------+
| users_groups                  | userChoice                | char      |
+-------------------------------+---------------------------+-----------+
| users_groups                  | usersFieldId              | int       |
+-------------------------------+---------------------------+-----------+
| users_groups                  | usersTrackerId            | int       |
+-------------------------------+---------------------------+-----------+
| users_usergroups              | userId                    | int       |
+-------------------------------+---------------------------+-----------+
| users_users                   | userId                    | int       |
+-------------------------------+---------------------------+-----------+

+---------------------------+
| tiki_calendar_categories  |
+---------------------------+
| tiki_categories           |
+---------------------------+
| tiki_categorized_objects  |
+---------------------------+
| tiki_category_objects     |
+---------------------------+
| tiki_category_sites       |
+---------------------------+
| tiki_directory_categories |
+---------------------------+
| tiki_related_categories   |
+---------------------------+
| tiki_theme_control_categs |
+---------------------------+
*** Things about creator and user
In tikilib.php, there is
#+BEGIN_SRC sql
function create_page(
	$name, $hits, $data, $lastModif, $comment,
	$user = 'admin', $ip = '0.0.0.0',
	$description = '', $lang='', $is_html = false,
	$hash=null, $wysiwyg=NULL,
	$wiki_authors_style='', $minor=0, $created=''
)
#+END_SRC
In there we set user and creator to the loggin user.

** Categorical Project Management

Categorical Project Management allows for the administrator
to easily set up categories for any project hosted on a
given Tiki such that users can manage all normal permissions
on all project resources through the category system.
	 
See
- [[file:tiki-ngender-schema.sql]]
- [[file:tiki-ngender-data.sql]]

*** convert Tiki's Tables from MyISAM to innodb
	 
In order to convert Tiki's Tables from MyISAM to innodb we must to either:
	 
#+BEGIN_SRC sql
update  tiki_preferences set value = 'n' where name = 'feature_search_fulltext';
insert into tiki_preferences (name, value) values ('feature_search_fulltext', 'n');
	- or even better as an upsert!!
#+END_SRC

This would work if name was a primary key which, yay, it is!
#+BEGIN_SRC sql
describe tiki_preferences; 
#+END_SRC
+-------+--------------+------+-----+---------+-------+
| Field | Type         | Null | Key | Default | Extra |
+-------+--------------+------+-----+---------+-------+
| name  | varchar(255) | NO   | PRI |         |       |
| value | text         | YES  |     | NULL    |       |
+-------+--------------+------+-----+---------+-------+

#+BEGIN_SRC sql
INSERT INTO tiki_preferences (name, value)
VALUES ('feature_categorical_stewardship', 'y')
ON DUPLICATE KEY
UPDATE value = 'y';
#+END_SRC

Upsert example online:
#+BEGIN_SRC sql
INSERT INTO `usage`
(`thing_id`, `times_used`, `first_time_used`)
VALUES
(4815162342, 1, NOW())
ON DUPLICATE KEY UPDATE
`times_used` = `times_used` + 1
#+END_SRC

See:
- [[file:/Tiki/db/tiki_innodb.sql]]
- [[file:/Tiki/db/tiki_convert_myisam_to_innodb.sql]]

** Procedure and Function Experiments 

*** User Default Group and Default Category

[[file:tiki-ngender.sql]]
	 
*** Object In Category

Categories have Single-Inheritance

Rewrite these functions to just use loops!

#+BEGIN_SRC sql
DELIMITER //
CREATE DEFINER=`phpmyadmin`@`localhost` FUNCTION `cat_in_super`(cat_id int, super_id int) RETURNS int(11)
    READS SQL DATA
BEGIN
 DECLARE recur_id int;
 DECLARE found_cat_id int DEFAULT 0;
 DECLARE no_more int DEFAULT 0;
 DEClARE cat_cursor CURSOR FOR 
 SELECT parentId FROM tiki_categories WHERE categId = super_id;
 DECLARE CONTINUE HANDLER FOR NOT FOUND SET no_more = 1;
 OPEN cat_cursor;
 LOOP
  FETCH cat_cursor INTO found_cat_id;
  IF no_more = 1 THEN CLOSE cat_cursor; RETURN 0; END IF;
  IF found_cat_id = cat_id THEN CLOSE cat_cursor; RETURN cat_id; END IF;
  SET recur_id = obj_in_cat(cat_id, found_cat_id);
  IF recur_id <> 0 THEN CLOSE cat_cursor; RETURN recur_id; END IF;
 END LOOP;
END//
DELIMITER ;
#+END_SRC

#+BEGIN_SRC sql
DELIMITER //
CREATE DEFINER=`phpmyadmin`@`localhost` FUNCTION `obj_in_cat`(obj_id int, cat_id int) RETURNS int(11)
    READS SQL DATA
BEGIN
 DECLARE recur_id int;
 DECLARE found_cat_id int DEFAULT 0;
 DECLARE no_more int DEFAULT 0;
 DEClARE cat_cursor CURSOR FOR 
 SELECT parentId FROM tiki_categories WHERE categId = cat_id;
 DECLARE CONTINUE HANDLER FOR NOT FOUND SET no_more = 1;
 SELECT categId INTO found_cat_id 
 FROM tiki_category_objects WHERE categId = cat_id AND catObjectId = obj_id ;
 IF found_cat_id <> 0 THEN RETURN found_cat_id; END IF;
 OPEN cat_cursor;
 LOOP
  FETCH cat_cursor INTO found_cat_id;
  IF no_more = 1 THEN CLOSE cat_cursor; RETURN 0; END IF;
  SET recur_id = cat_in_super(cat_id, found_cat_id);
  IF recur_id <> 0 THEN CLOSE cat_cursor; RETURN recur_id; END IF;
 END LOOP;
END//
DELIMITER ;
#+END_SRC

*** User In Group and Group In Group

Groups have Multiple-Inheritance.

Rewrite these functions to use recursion to search the group hierarchies.

#+BEGIN_SRC sql
DELIMITER //
CREATE DEFINER=`phpmyadmin`@`localhost` FUNCTION `cat_in_super`(cat_id int, super_id int) RETURNS int(11)
    READS SQL DATA
BEGIN
 DECLARE recur_id int;
 DECLARE found_cat_id int DEFAULT 0;
 DECLARE no_more int DEFAULT 0;
 DEClARE cat_cursor CURSOR FOR 
 SELECT parentId FROM tiki_categories WHERE categId = super_id;
 DECLARE CONTINUE HANDLER FOR NOT FOUND SET no_more = 1;
 OPEN cat_cursor;
 LOOP
  FETCH cat_cursor INTO found_cat_id;
  IF no_more = 1 THEN CLOSE cat_cursor; RETURN 0; END IF;
  IF found_cat_id = cat_id THEN CLOSE cat_cursor; RETURN cat_id; END IF;
  SET recur_id = obj_in_cat(cat_id, found_cat_id);
  IF recur_id <> 0 THEN CLOSE cat_cursor; RETURN recur_id; END IF;
 END LOOP;
END//
DELIMITER ;
#+END_SRC

#+BEGIN_SRC sql
DELIMITER //
CREATE DEFINER=`phpmyadmin`@`localhost` FUNCTION `obj_in_cat`(obj_id int, cat_id int) RETURNS int(11)
    READS SQL DATA
BEGIN
 DECLARE recur_id int;
 DECLARE found_cat_id int DEFAULT 0;
 DECLARE no_more int DEFAULT 0;
 DEClARE cat_cursor CURSOR FOR 
 SELECT parentId FROM tiki_categories WHERE categId = cat_id;
 DECLARE CONTINUE HANDLER FOR NOT FOUND SET no_more = 1;
 SELECT categId INTO found_cat_id 
 FROM tiki_category_objects WHERE categId = cat_id AND catObjectId = obj_id ;
 IF found_cat_id <> 0 THEN RETURN found_cat_id; END IF;
 OPEN cat_cursor;
 LOOP
  FETCH cat_cursor INTO found_cat_id;
  IF no_more = 1 THEN CLOSE cat_cursor; RETURN 0; END IF;
  SET recur_id = cat_in_super(cat_id, found_cat_id);
  IF recur_id <> 0 THEN CLOSE cat_cursor; RETURN recur_id; END IF;
 END LOOP;
END//
DELIMITER ;
#+END_SRC

*** Possible Problems

** Tiki Key Files
*** Tiki MySQL Schema Files
[[file:../db/tiki.sql]]
[[file:tiki-ngender.sql]]
[[file:tiki-ngender-schema.sql]]
[[file:tiki-ngender-data.sql]]
*** Tiki Features
Tiki features are stored in a number of files under [[file:../lib/prefs]]
#+BEGIN_SRC sh
(cd /Tiki/lib/prefs ; grep -l "'name'" *.php)
(cd /Tiki/lib/prefs ; grep -w 'prefs[a-z_]*list(' *.php)
#+END_SRC

[[file:../lib/prefs/feature.php]]
[[file:../lib/prefs/global.php]]
** Features 

https://dev.tiki.org/Create+a+new+preference?highlight=creating+new+preferences

in feature.php look at
- feature_dummy
- feature_ngender_ownership
- hmm, this code does not seem to be used anywhere
- is it obsoleted by table tiki_feature?

What's the code at the top of
- function prefs_feature list>

Do features get put in the database automatically?
- some are set in tiki.sql 

What database tables hold features-related information?
- tiki_preferences -- 87 like 'feature_%'
- tiki_feature -- empty!
- tiki_menu_options -- field section is getting set to features ?
- tiki_featured_links -- empty!
- tiki_sefurl_regex_out ?

SELECT count(*)  FROM tiki_feature;
+----------+
| count(*) |
+----------+
|        0 |
+----------+

SELECT count(*)  FROM tiki_preferences where name like 'feature_%';
+----------+
| count(*) |
+----------+
|       87 |
+----------+


Do features show up in 

** database settings

I notice in TABLE users_users that
- userId int(8)

Is the 8 a count in bytes or bits?

How about just the ones that can be set using the GUI for a
group/category combination?

The group/category combination permissions live
in TABLE users_objectpermissions WHERE objectType='category'

Awkwardness:
- `objectId` varchar(32) NOT NULL default '',
is a hash:

#+BEGIN_SRC sql
SELECT DISTINCT
permName, groupName, category_path(group_default_category(name_to_group(groupName)))
FROM users_objectpermissions
WHERE objectType = 'category' AND groupName = 'User_Test_Observer'
AND objectId = MD5(CONCAT('category', group_default_category(name_to_group(groupName))));
#+END_SRC

Could change from using 'User' to using 'Steward' for
everybody!  This would solve the problem of making this
whole system more explicit.  However, with all of the
groupNames everywhere, conversion could be awkward.

Compare
- Joe --> User_Joe --> User::Joe
- Joe --> User_Joe --> Steward::Joe
- Joe --> User_Joe --> User:Steward::Joe
- Joe --> Steward_Joe --> Steward::Joe

Strategy: Create
- ZSteward --> User_Test_Steward --> User::Test::Steward
- ZNoDefaultGroup --> No Default Group
- ZNoDefaultCategory --> User_Test_NoDefaultCategory --> No Default Category
- ZNotSteward --> User_Test_NotSteward --> Foo::Bar or whatever

Use ZSteward as a model for all other Steward accounts 
- clone permissions from users_objectpermissions for new Stewards!

Use ZSteward, ZNoDefaultGroup, ZNoDefaultCategory, ZNotSteward in tests.

** Tiki Permissions

Note: Unlike other objects, with wiki pages, tiki_p_edit is
used for permission to create pages *and* permission to edit
pages!
	 
See lib/setup/perms.php for 

#+BEGIN_SRC php
$allperms = $userlib->get_enabled_permissions();

Perms_Context::setPermissionList($allperms);

$builder = new Perms_Builder;
$perms = $builder
	->withCategories($prefs['feature_categories'] == 'y')
	->withDefinitions($allperms)
	->build();

Perms::set($perms);

$_permissionContext = new Perms_Context($user, false);

if ($groupList) {
	$_permissionContext->overrideGroups($groupList);
}

$_permissionContext->activate(true);
#+END_SRC

- lib/userslib.php UsersLib::get_raw_permissions() ::
		 returns raw permissions as a gigantic php array of hashes

*** Permissions to Create Things:

#+BEGIN_EXAMPLE
$ grep "'tiki_p_" lib/userslib.php  | grep create
				'name' => 'tiki_p_acct_create_book',
				'name' => 'tiki_p_bigbluebutton_create',
				'name' => 'tiki_p_create_blogs',
		//	'name' => 'tiki_p_create_category',
				'name' => 'tiki_p_create_file_galleries',
				'name' => 'tiki_p_create_galleries',
				'name' => 'tiki_p_perspective_create',
				'name' => 'tiki_p_create_tracker_items',
				'name' => 'tiki_p_create_bookmarks',
				'name' => 'tiki_p_create_css',

				'name' => 'tiki_p_admin_calendar',
				'description' => tr('Can create/admin calendars'),
#+END_EXAMPLE

*** Permissions to Edit Things:

#+BEGIN_EXAMPLE
				'name' => 'tiki_p_edit_article',
				'name' => 'tiki_p_edit_article_user',
				'name' => 'tiki_p_edit_submission',
				'name' => 'tiki_p_edit_comments',
				'name' => 'tiki_p_edit_content_templates',
				'name' => 'tiki_p_edit_gallery_file',
				'name' => 'tiki_p_forum_edit_own_posts',
				'name' => 'tiki_p_edit_html_pages',
				'name' => 'tiki_p_edit_videos',
				'name' => 'tiki_p_perspective_edit',
				'name' => 'tiki_p_edit_sheet',
				'name' => 'tiki_p_edit_tikitests',
				'name' => 'tiki_p_edit',
				'name' => 'tiki_p_edit_inline',
				'name' => 'tiki_p_edit_copyrights',
				'name' => 'tiki_p_edit_dynvar',
				'name' => 'tiki_p_edit_references',
				'name' => 'tiki_p_edit_structures',
				'name' => 'tiki_p_edit_cookies',
				'name' => 'tiki_p_edit_languages',
				'name' => 'tiki_p_edit_menu',
				'name' => 'tiki_p_edit_menu_option',
				'name' => 'tiki_p_edit_templates',
				'name' => 'tiki_p_edit_switch_mode',
#+END_EXAMPLE

Note: tiki_p_edit seems to also permit creating Wiki pages!

*** Category permissions

#+BEGIN_EXAMPLE
$ grep "'tiki_p_" lib/userslib.php  | grep categ 
				'name' => 'tiki_p_admin_categories',
				'name' => 'tiki_p_view_category',
				'name' => 'tiki_p_assign_perm_category',
		//	'name' => 'tiki_p_create_category',
				'name' => 'tiki_p_modify_object_categories',

			array(
				'name' => 'tiki_p_admin_categories',
				'description' => tra('Can admin categories'),
				'level' => 'admin',
				'type' => 'category',
				'admin' => true,
				'prefs' => array('feature_categories'),
				'scope' => 'object',
			),
			array(
				'name' => 'tiki_p_view_category',
				'description' => tra('Can see the category in a listing'),
				'level' => 'basic',
				'type' => 'category',
				'admin' => false,
				'prefs' => array('feature_categories'),
				'scope' => 'object',
			),
			array(
				'name' => 'tiki_p_add_object',
				'description' => tra('Can add objects to the category (tiki_p_modify_object_categories permission required)'),
				'level' => 'editors',
				'type' => 'category',
				'admin' => false,
				'prefs' => array('feature_categories'),
				'scope' => 'object',
			),
			array(
				'name' => 'tiki_p_remove_object',
				'description' => tra('Can remove objects from the category (tiki_p_modify_object_categories permission required)'),
				'level' => 'editors',
				'type' => 'category',
				'admin' => false,
				'prefs' => array('feature_categories'),
				'scope' => 'object',
			),
			array(
				'name' => 'tiki_p_assign_perm_category',
				'description' => tra('Can assign perms to category'),
				'level' => 'admin',
				'type' => 'category',
				'admin' => false,
				'prefs' => array('feature_categories'),
				'scope' => 'object',
			),
			//array(
			//	'name' => 'tiki_p_create_category',
			//	'description' => tra('Can create new categories'),
			//	'level' => 'admin',
			//	'type' => 'category',
			//	'admin' => false,
			//	'prefs' => array('feature_categories'),
			//	'scope' => 'global',
			//),
			array(
				'name' => 'tiki_p_admin_directory_cats',
				'description' => tra('Can admin directory categories'),
				'level' => 'editors',
				'type' => 'directory',
				'admin' => false,
				'prefs' => array('feature_directory'),
				'scope' => 'global',
			),
			array(
				'name' => 'tiki_p_modify_object_categories',
				'description' => tra('Can change the categories of an object'),
				'level' => 'editors',
				'type' => 'tiki',
				'admin' => false,
				'prefs' => array('feature_categories'),
				'scope' => 'object',
				'apply_to' => array('wiki', 'trackers'),
			),
#+END_EXAMPLE

Seems like we should want to have tiki_p_modify_object_categories between
Steward's Default Group <-> Steward's Default Category
AND
Group Project_Editors <-> Category User::Test::Editable

We could also give Stewards the permission
- tiki_p_view_category
on either
- ALL categories or
- all except for those on a blacklist

** DETERMINISTIC characteristic of NULL returning functions

It would be nicer if MYSQL didn't assume that DETERMINISTIC
functions which return NULL might not return a value later.

Do I know for certain that this is NOT true in PostgreSQL or MySQL?

It would be useful to raise this question with the
PostgreSQL developers - perhaps after checking what the SQL
standard might say on the matter!

** Categorical Stewardship Session Variables

It should increase efficiency if any key values are kept as
session variables rather than having to be fetched.

Categorical Stewardship Session Variables (proposed):
- @cat_stew_state :: NULL = off, 1 = on and initialized, 0 = error
- @cat_stew_errors :: any message about state
- @cat_stew_group :: group id of group Steward
- @cat_stew_cat_user :: category id of category user
- @cat_stew_cat_test :: category id of category test

OK, I've written a procedure to create these, but I've not
yet arranged to have it called from the PHP.  It might not
really be worth it.

** Similar Features and Requests for Such

Search https://doc.tiki.org/Groups
for "private room" to see something
a little bit like categorical stewardship.

This user seems to be running up against a similar problem:
https://stackoverflow.com/questions/27001257/tiki-wiki-how-do-i-force-newly-created-pages-into-a-category-based-on-the-user

*** Group for Each User

- eponymousgroups
- $prefs['eponymousGroups']

from lib/userslib.php
#+BEGIN_SRC php
if ( $prefs['eponymousGroups'] == 'y' ) {
	// Create a group just for this user, for permissions
	// assignment.
	$this->add_group($user, "Personal group for $user.", '', 0, 0, 0, '');
	$this->assign_user_to_group($user, $user);
}
#+END_SRC

- from /Tiki/lib/prefs/lib/global.php
- inside of function add_user
#+BEGIN_SRC php
'eponymousGroups' => array(
	'name' => tra('Create a new group for each user'),
				'description' => tra(''),
	'type' => 'flag',
	'hint' => tra("The group name will be the same as the user's username"),
	'help' => 'Groups',
	'default' => 'n',
	'keywords' => 'eponymous groups',
),
#+END_SRC

Note functions:
- add_user
- register_new_user_local

Study
- in file lib/sharelib.php 
- class Tiki_ShareObject
- function loadPermission
- other class functions
- Note that groups are loaded and cached
- $this->objectHash = md5($objectType . TikiLib::strtolower($objectId));
- also class Tiki_SharGroup

** What about removing categories?

Maybe only if you're also the creator?

** Creating a help page for my feature & popup wiki pages

In feature.php I can have help associated with a wiki page
giving popup help.

And hey, how can we exploit popup wiki pages?

** Missing bits

Eventually need to provide a GUI method for calling SQL
procedure make_stewards_be_stewards()

Which I suppose also means loading the sql code, which
should maybe be called ngender.sql?

Need to set the admin property.

** Improving the NGender SQL code

Have the stored procedures either return an error status
via an OUT parameter or make them be stored functions
returning such a status or have them throw an exception.

** Creator special privileges

 Re: Page edit permissions in Features / Usability
#+BEGIN_QUOTE
Re: Page edit permissions Yes, there's a configuration
option on the Admin Wiki page, under the
"Features"..."Features" tab: "Page creators are admin of
their pages" that has that effect, I believe. -- Gary
#+END_QUOTE

Trying to track this down!

OK, according to

https://doc.tiki.org/Wiki%20Config#Page_creators_are_admin_of_their_pages
#+BEGIN_QUOTE
Page creators are admin of their pages
If enabled then users who create a page are also in control
of that page. They have administrators rights over it.
#+END_QUOTE
which might have obviated feature_ngender_stewards, but is
clearly less flexible.

More info at:

https://tiki.org/tiki-view_forum_thread.php?threadId=4633

** Setting the model permissions for Stewards<->Steward

It's very unclear what the various individual permissions
allow - they're WAY under documented!

What should a Steward of a Wiki Page or Other Object NOT be
allowed to do?
- Set individual permissions

There's a permission for categories which would allow users
to associate that category with an arbitrary other page -- I
don't think I ever want that to happen.

Would it ever be a bad idea to allow a Steward of something
to assoociate that thing with a Category - other than their
mistaking what that Category does?  How bad a mistake could
that be?

Would it ever be a bad idea to allow a Steward to see that a
certain Category exists?

*** How to find out what's changed?

I can look at timestamps

**** Commands

#+BEGIN_SRC sql
SELECT login, from_unixtime(created) from users_users
ORDER BY created DESC LIMIT 2;

SELECT login, from_unixtime(lastLogin) from users_users
ORDER BY lastLogin DESC LIMIT 5;

SELECT pageName, from_unixtime(lastModif) from tiki_pages
ORDER BY lastModif DESC LIMIT 5;

SELECT pageName, from_unixtime(created) from tiki_pages
ORDER BY created DESC LIMIT 5;
#+END_SRC

**** Running on a.office:

#+BEGIN_SRC sql
SELECT login, from_unixtime(created) from users_users
ORDER BY created DESC LIMIT 2;
#+END_SRC
+-------+------------------------+
| login | from_unixtime(created) |
+-------+------------------------+
| Toby  | 2017-01-23 21:25:26    |
| Jenn  | 2016-12-28 18:13:50    |
+-------+------------------------+
2 rows in set (0.00 sec)

#+BEGIN_SRC sql
SELECT login, from_unixtime(lastLogin) from users_users
ORDER BY lastLogin DESC LIMIT 5;
#+END_SRC
+-------------+--------------------------+
| login       | from_unixtime(lastLogin) |
+-------------+--------------------------+
| Greg        | 2017-04-14 18:52:18      |
| ZRegistered | 2017-03-15 21:32:19      |
| Lynn        | 2017-02-27 14:52:17      |
| Toby        | 2017-01-23 22:03:49      |
| ZObserver   | 2017-01-05 16:27:36      |
+-------------+--------------------------+
5 rows in set (0.00 sec)

#+BEGIN_SRC sql
SELECT pageName, from_unixtime(lastModif) from tiki_pages
ORDER BY lastModif DESC LIMIT 5;
#+END_SRC
+------------------------------+--------------------------+
| pageName                     | from_unixtime(lastModif) |
+------------------------------+--------------------------+
| User:ZRegistered             | 2017-03-15 22:49:22      |
| User:Greg                    | 2017-03-15 21:05:36      |
| Team                         | 2017-02-17 21:32:16      |
| User:ZObserver               | 2017-02-13 18:12:17      |
| Greg: Tiki Improvement Ideas | 2017-01-21 20:05:54      |
+------------------------------+--------------------------+
5 rows in set (0.00 sec)

#+BEGIN_SRC sql
SELECT pageName, from_unixtime(created) from tiki_pages
ORDER BY created DESC LIMIT 5;
#+END_SRC
+--------------------------------+------------------------+
| pageName                       | from_unixtime(created) |
+--------------------------------+------------------------+
| User:ZRegistered               | 2017-03-15 22:49:22    |
| User:ZObserver                 | 2017-02-13 18:09:44    |
| Greg: Tiki Markup Notes        | 2017-01-21 19:48:58    |
| Greg: Tiki Improvement Ideas   | 2017-01-21 19:29:02    |
| Cyber Design Low Hanging Fruit | 2017-01-21 16:20:35    |
+--------------------------------+------------------------+
5 rows in set (0.00 sec)

**** Running on ngender.org

#+BEGIN_SRC sql
SELECT login, from_unixtime(created) from users_users
ORDER BY created DESC LIMIT 2;
#+END_SRC
+-------+------------------------+
| login | from_unixtime(created) |
+-------+------------------------+
| Toby  | 2017-01-23 21:25:26    |
| Jenn  | 2016-12-28 18:13:50    |
+-------+------------------------+
2 rows in set (0.05 sec)


#+BEGIN_SRC sql
SELECT login, from_unixtime(lastLogin) from users_users
ORDER BY lastLogin DESC LIMIT 5;
#+END_SRC
+-----------+--------------------------+
| login     | from_unixtime(lastLogin) |
+-----------+--------------------------+
| Greg      | 2017-04-13 15:59:00      |
| Toby      | 2017-01-23 22:03:49      |
| Lynn      | 2017-01-05 14:22:44      |
| ZObserver | 2017-01-04 21:47:18      |
| Stacey    | 2016-12-26 15:13:12      |
+-----------+--------------------------+
5 rows in set (0.00 sec)

#+BEGIN_SRC sql
SELECT pageName, from_unixtime(lastModif) from tiki_pages
ORDER BY lastModif DESC LIMIT 5;
#+END_SRC
+------------------------------+--------------------------+
| pageName                     | from_unixtime(lastModif) |
+------------------------------+--------------------------+
| Greg:Snippets                | 2017-03-06 17:31:22      |
| User:Greg                    | 2017-03-06 17:29:40      |
| Greg:Projects                | 2017-03-06 15:39:25      |
| Greg: Tiki Improvement Ideas | 2017-01-21 20:05:54      |
| Greg: Tiki Markup Notes      | 2017-01-21 20:00:52      |
+------------------------------+--------------------------+
5 rows in set (0.00 sec)

#+BEGIN_SRC sql
SELECT pageName, from_unixtime(created) from tiki_pages
ORDER BY created DESC LIMIT 5;
#+END_SRC

#+BEGIN_SRC sql
SELECT pageName, from_unixtime(created) from tiki_pages
ORDER BY created DESC LIMIT 5;
#+END_SRC
+--------------------------------+------------------------+
| pageName                       | from_unixtime(created) |
+--------------------------------+------------------------+
| Greg:Snippets                  | 2017-03-06 17:31:22    |
| Greg:Projects                  | 2017-03-06 15:38:37    |
| Greg: Tiki Markup Notes        | 2017-01-21 19:48:58    |
| Greg: Tiki Improvement Ideas   | 2017-01-21 19:29:02    |
| Cyber Design Low Hanging Fruit | 2017-01-21 16:20:35    |
+--------------------------------+------------------------+
5 rows in set (0.00 sec)


*** List of Category<->Group Permissions

See lib/userslib.php get_raw_permissions() for ?complete? list
		
- articles
	- Can admin the articles (tiki_p_admin_cms)
	- Can approve submissions (tiki_p_approve_submission)
	- Can read article headings (tiki_p_articles_read_heading)
	- Can edit articles (tiki_p_edit_article)
	- Can edit the user (owner) of articles (tiki_p_edit_article_user)
	- Can edit submissions (tiki_p_edit_submission)
	- Can read articles (tiki_p_read_article)
	- Can remove articles (tiki_p_remove_article)
	- Can remove submissions (tiki_p_remove_submission)
	- Can rate articles (tiki_p_rate_article)
	- Can read a topic (applies only to individual topic permissions) (tiki_p_topic_read)
- blogs
	- Can admin blogs (tiki_p_blog_admin)
	- Can assign perms to blog (tiki_p_assign_perm_blog)
	- Can post to a blog (tiki_p_blog_post)
	- Can read blogs (tiki_p_read_blog)
	- Can view in module and feed the blog posts (tiki_p_blog_post_view_ref)
	- Can view in module and feed the blog (tiki_p_blog_view_ref)
- calendar
	- Can create/admin calendars (tiki_p_admin_calendar)
	- Can add events in the calendar (tiki_p_add_events)
	- Can edit events in the calendar (tiki_p_change_events)
	- Can browse the calendar (tiki_p_view_calendar)
	- Can view event details (tiki_p_view_events)
	- Can add himself or herself to the participants (tiki_p_calendar_add_my_particip)
	- Can add guest to the participants (tiki_p_calendar_add_guest_particip)
- comments
	- Can post new comments (tiki_p_post_comments)
	- Can read comments (tiki_p_read_comments)
	- Can admin comments (tiki_p_admin_comments)
	- Can edit all comments (tiki_p_edit_comments)
	- Can delete comments (tiki_p_remove_comments)
	- Can vote on comments (tiki_p_vote_comments)
- forums
	- Can admin forums (tiki_p_admin_forum)
	- Can attach files to forum posts (tiki_p_forum_attach)
	- Auto approve forum posts (tiki_p_forum_autoapp)
	- Can edit one’s own forum posts (tiki_p_forum_edit_own_posts)
	- Can post in forums (tiki_p_forum_post)
	- Can start threads in forums (tiki_p_forum_post_topic)
	- Can read forums (tiki_p_forum_read)
	- Can report posts to moderator (tiki_p_forums_report)
	- Can vote on comments in forums (tiki_p_forum_vote)
- newsletters
	- Can admin newsletters (tiki_p_admin_newsletters)
	- Can send newsletters (tiki_p_send_newsletters)
	- Can subscribe to newsletters (tiki_p_subscribe_newsletters)
	- Can view the archive of a newsletters (tiki_p_view_newsletter)
- polls
	- Can view poll user choices (tiki_p_view_poll_choices)
	- Can vote in polls (tiki_p_vote_poll)
	- Can view poll voters (tiki_p_view_poll_voters)
- sheet
	- Can admin spreadsheets (tiki_p_admin_sheet)
	- Can create and edit spreadsheets (tiki_p_edit_sheet)
	- Can view spreadsheets (tiki_p_view_sheet)
	- Can view spreadsheets history (tiki_p_view_sheet_history)
- wiki
	- Can view page/pages (tiki_p_view)
	- Can edit pages (tiki_p_edit)
	- Can inline-edit pages (tiki_p_edit_inline)
	- Can view wiki history (tiki_p_wiki_view_history)
	- Can admin the wiki (tiki_p_admin_wiki)
	- Can assign permissions to wiki pages (tiki_p_assign_perm_wiki_page)
	- Can remove (tiki_p_remove)
	- Can rename pages (tiki_p_rename)
	- Can roll back pages (tiki_p_rollback)
	- Can upload pictures to wiki pages (tiki_p_upload_picture)
	- Can use the page as a template for a tracker or unified search (tiki_p_use_as_template)
	- Can view in module and feed the wiki pages reference (tiki_p_wiki_view_ref)
	- Can admin attachments on wiki pages (tiki_p_wiki_admin_attachments)
	- Can attach files to wiki pages (tiki_p_wiki_attach_files)
	- Can view and download wiki page attachments (tiki_p_wiki_view_attachments)
	- Can view wiki comments (tiki_p_wiki_view_comments)
	- Can view source of wiki pages (tiki_p_wiki_view_source)
- wiki structure
	- Can administer structures (tiki_p_admin_structures)
	- Can create and edit structures (tiki_p_edit_structures)
	- Can lock structures (tiki_p_lock_structures)

*** Tiki UserPage prefix 

What is the UserPage prefix?
		
Warning: Don't set the UserPage prefix to blank or you can't
edit pages. Big Shout Out to Louis-Philippe...could edit any
pages on my Tiki. The user page prefix (I don't know if you
use those) was empty, leading...to a non-empty
value. Further, it appears the prefix must end in a colon or
no one can create new pages
** Having Errors be Seen 
We were having trouble getting the Tiki to log or show
errors without our putting in explicit trace code.

After upgrading PHP to PHP7.1 and installling the
developmental php.ini file errors throwing exceptions would
interrupt the Tiki and come through to the screen.

This revealed some pre-existing bugs.

Now that things seem stable, it would be good to arrange for
errors that should not be fatal to be logged, to NOT abort
Tiki operations, to NOT be displayed on the screen (unless
maybe if the user is a member of Group Admins).

*** Fixing old Tiki bugs

Lynn & I fixed three bugs that were already in the Tiki PHP code.
1. an array was initialized to '' instead of to array()
2. a string with a unit suffix used as a number w/o using intval
3. a function called with no arguments requiring one;
   since the silly function didn't use the required argument,
	 I made it default to '' and added a WTF??.

** Conversion to Innodb

The tiki tables have now been converted to InnoDb
from myIsam using the script
NGender/gen-innodb-convert-script.sh 

** A few more Bugs
When I tried to rebuild the Tiki Index through the Web Interface I got:

#+BEGIN_EXAMPLE
Fatal error: Uncaught Error: Call to undefined function
mb_strtoupper() in
/WebPages/ngender.tiki.wiki/public/lib/core/Search/GlobalSource/TitleInitialSource.php:54
...
#+END_EXAMPLE

The Web interface also suggests: 

- php console.php index:optimize
- php console.php index:rebuild
- php console.php index:rebuild --log

Log file is saved as temp/Search_Indexer_console.log

I tried

/usr/local/php/php-7.1.4/bin/php console.php index:rebuild --log

only to get the same error:

*** failing: /usr/local/php/php-7.1.4/bin/php console.php index:rebuild --log

#+BEGIN_EXAMPLE
PHP Fatal error:  Uncaught Error: Call to undefined function mb_strtoupper() in /WebPages/ngender.tiki.wiki/public/lib/core/Search/GlobalSource/TitleInitialSource.php:54
Stack trace:
#0 /WebPages/ngender.tiki.wiki/public/lib/core/Search/Indexer.php(148): Search_GlobalSource_TitleInitialSource->getData('wiki page', 'about', Object(Search_MySql_TypeFactory), Array)
#1 /WebPages/ngender.tiki.wiki/public/lib/core/Search/Indexer.php(135): Search_Indexer->augmentDocument('wiki page', 'about', Array, Object(Search_MySql_TypeFactory), Array)
#2 /WebPages/ngender.tiki.wiki/public/lib/core/Search/Indexer.php(98): Search_Indexer->getDocuments('wiki page', 'about')
#3 /WebPages/ngender.tiki.wiki/public/lib/core/Search/Indexer.php(72): Search_Indexer->addDocument('wiki page', 'about')
#4 /WebPages/ngender.tiki.wiki/public/lib/search/searchlib-unified.php(236): Search_Indexer->rebuild()
#5 /WebPages/ngender.tiki.wiki/public/lib/tikilib.php(169): UnifiedSearchLib->{closure}()
#6 /WebPages/ngender.tiki.wiki/public/lib/search/searchlib-unified in /WebPages/ngender.tiki.wiki/public/lib/core/Search/GlobalSource/TitleInitialSource.php on line 54
#+END_EXAMPLE

*** partially succeeding: /usr/local/php/php-7.1.4/bin/php console.php index:rebuild --log

I found and fixed the bug.  Indexing seemed to succeed but it did also report one more error which I kludged with a patch.

#+BEGIN_EXAMPLE
/usr/local/php/php-7.1.4/bin/php console.php index:rebuild --log
/WebPages/ngender.tiki.wiki/public/vendor/adodb/adodb/adodb.inc.php, 4216, ADONewConnection: db = mysqli
/WebPages/ngender.tiki.wiki/public/lib/core/TikiDb/Initializer/Adodb.php, 23
/WebPages/ngender.tiki.wiki/public/vendor/adodb/adodb/adodb.inc.php, 547 127.0.0.1 tiki threehowitzerrounds tiki 0
/WebPages/ngender.tiki.wiki/public/vendor/adodb/adodb/adodb.inc.php, 552 127.0.0.1 tiki threehowitzerrounds tiki 0
/WebPages/ngender.tiki.wiki/public/vendor/adodb/adodb/drivers/adodb-mysqli.inc.php, 86
/WebPages/ngender.tiki.wiki/public/vendor/adodb/adodb/drivers/adodb-mysqli.inc.php, 91
Started rebuilding index...
/WebPages/ngender.tiki.wiki/public/lib/prefslib.php, 624, 8, Array to string conversion
/WebPages/ngender.tiki.wiki/public/lib/prefslib.php, 111, 512, Missing default for preference “feature_score_expday”
/WebPages/ngender.tiki.wiki/public/lib/prefslib.php, 617 gettype(info[tags]) = NULL
/WebPages/ngender.tiki.wiki/public/lib/prefslib.php, 618 info[tags] = 
Indexed
  wiki page: 120
  forum post: 8
  forum: 10
  blog post: 12
  article: 1
  file: 1
  file gallery: 4
  trackeritem: 5
  tracker: 2
  trackerfield: 33
  sheet: 0
  comment: 0
  user: 29
  group: 53
  category: 77
Rebuilding index done
Execution time: 5 secs
Current Memory usage: 33.0 MiB
Memory peak usage before indexing: 12.7 MiB
Memory peak usage after indexing: 33.0 MiB
Number of queries: 12826
#+END_EXAMPLE

** Snippets for Tracing code

#+BEGIN_SRC php
echo '<pre>';
echo 'foo = "';
var_dump($foo);
echo '"<br />';
echo 'bar = "';
var_dump($bar);
echo '"<br />';
echo '</pre>';

echo '<pre>';
echo 'is_array(parent::code[self::level1][self::level2]) = ';
echo is_array(parent::$code[self::$level1][self::$level2])?'1':'0';
echo '<br />';
echo '</pre>';

error_log(__FILE__ . ', ' . __LINE__); // NGender!!
error_log(__FILE__ . ', ' . __LINE__ . ' ' . 'NAME = ' . $NAME); 
error_log(__FILE__ . ', ' . __LINE__ . ' ' . 'gettype(VAR) = ' . gettype($VAR));
error_log(__FILE__ . ', ' . __LINE__ . ' ' . 'VAR = ' . var_export($VAR,1));
#+END_SRC

var_dump produces the best output since it includes types.
ideally for multi-line output we should call error_log for each line
we could write a function to do the best possible thing

#+BEGIN_SRC php
function var_log( $file, $line, $var_name, $val, $func_name='', $class_name='' ) {
  $context = ''
	. ( $file === '' ? '' : ( $file . ' ' ) )
	. ( $line === '' ? '' : ( $line . ' ' ) )
	. ( $class_name === '' ? '' : ( $class_name . '->' ) )
	. ( $func_name === '' ? '' : ( $func_name . '() ' ) )
	. ( $var_name === '' ? '' : ( $var_name . ': ' ) );
    ob_start();                    // start capture
    var_dump( $val );           // dump value with type info
		$lines = preg_split("/\r\n|\n|\r/", ob_get_contents());
    ob_end_clean();                // end capture
		foreach ( $lines as $line ) {
        error_log( $context . ' ' . $line );
		}
}
 
$object = new SomeClass();
var_log( __FILE__, __LINE__, 'object', $object );
var_log( __FILE__, __LINE__, 'object', $object, __FILE__, __LINE__);
var_log(isset($tiki_p_edit), 'isset(tiki_p_edit)', __FILE__, __LINE__);
#+END_SRC

** Need more tests!

Especially of all functions called by make_stewards_be_stewards:

Are we assigning group inheritance when we create a group?
We shouldn't!

** Clear the Tiki Cache after changing user/group assignments!

And presumably after other admin procedures as well!

The problems with ZObserver were caused by an old cache
which didn't know that ZObserver was a member of group
Stewards!


** Studying category code

** lib/categories/categlib.php get_object_categories

when $parentid is unknown, query =
#+BEGIN_SRC sql
SELECT `categId`
FROM `tiki_category_objects` tco, `tiki_categorized_objects` tto, `tiki_objects` o
WHERE tco.`catObjectId`=tto.`catObjectId` AND o.`objectId`=tto.`catObjectId`
AND o.`type`=? AND `itemId`=?"
#+END_SRC
Guess: This is getting a list of all categories that are
actually in use, just in case there are categories that are
somehow bogus!

when $parentid is known, query =
#+BEGIN_SRC sql
SELECT tc.`categId`
FROM `tiki_category_objects` tco, `tiki_categorized_objects` tto,
`tiki_objects` o,`tiki_categories` tc
WHERE tco.`catObjectId`=tto.`catObjectId` AND o.`objectId`=tto.`catObjectId`
AND o.`type`=? AND `itemId`=? AND tc.`parentId` = ? AND tc.`categId`=tco.`categId`
#+END_SRC
This implies that the $parentid being passed is a category parentId - huh?

*** TABLE tiki_categorized_objects ?

#+BEGIN_SRC sql
CREATE TABLE `tiki_categorized_objects` ( `catObjectId` int(11) PRIMARY KEY default '0', );
#+END_SRC

#+BEGIN_SRC sql
SELECT tiki_categorized_objects.catObjectId
FROM tiki_categorized_objects WHERE NOT EXISTS(
		 SELECT 1 FROM tiki_category_objects
		 WHERE tiki_categorized_objects.catObjectId = tiki_category_objects.catObjectId
);															-- empty set
#+END_SRC

| objectType | count(*) |
|------------+----------|
| calendar   |        4 |
| category   |     7035 |
| wiki page  |        2 |
** Tracing Notes
tiki_setup.php has a big section around line 300 with defaults
and non-defaults being set in the output template!

L21 of tiki-forums.php says
#+BEGIN_EXAMPLE
// This shows a list of forums everybody can use this listing
$commentslib = TikiLib::lib('comments');
but it's value is:

result: (("libraries") ("isExternalContext" . 0)
("*TikiDb*instance") ("time_control" . 0) ("extras" . 1)
("buffer") ("flag") ("usergroups_cache") ("num_queries" . 0)
("now" . 1499739031) ("cache_page_info") ("sessionId")
("*TikiDb*errorHandler") ("*TikiDb*errorMessage")
("*TikiDb*serverType") ("savedQuery")
("*TikiDb*tablePrefix") ("*TikiDb*usersTablePrefix"))

L49, $channels['data']

result: (("0") ("1") ("2") ("3") ("4") ("5") ("6") ("7")
("8") ("9"))
#+END_EXAMPLE

This seems right

Undocumented command:
- "l" :: show value of current assignment ?

** Misc
